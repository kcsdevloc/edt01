name: fr-rne-api

on:
  workflow_dispatch:
    inputs:
      sirens:
        description: "Comma list of SIRENs"
        required: true
        default: "552100554"

permissions:
  contents: read

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 300
    env:
      INPI_USER: ${{ secrets.INPI_USER }}
      INPI_PASS: ${{ secrets.INPI_PASS }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # We will LOGIN PER SIREN to keep the token fresh.
      - name: Process SIRENs with re-login and retries
        shell: bash
        run: |
          set -e
          mkdir -p out/FR
          IFS=',' read -ra S <<< "${{ inputs.sirens }}"
          ok=0
          for s in "${S[@]}"; do
            s="$(echo "$s" | xargs)"
            echo "=== SIREN $s ==="

            # Fresh login before each SIREN
            python countries/fr_rne_fetch.py --action login --token-file out/FR/inpi_token.json

            # List (soft probe)
            python countries/fr_rne_fetch.py --action list-attachments --siren "$s" --token-file out/FR/inpi_token.json --out out/FR || true
            sleep 10

            # Download with up to 6 retries; re-login before every retry
            for i in 1 2 3 4 5 6; do
              if python countries/fr_rne_fetch.py --action download-attachments --siren "$s" --token-file out/FR/inpi_token.json --out out/FR; then
                ok=$((ok+1))
                break
              fi
              echo "retry $i for $s ..."
              # re-login to refresh token before next attempt
              python countries/fr_rne_fetch.py --action login --token-file out/FR/inpi_token.json || true
              # backoff (grows): 20s, 40s, 60s, 90s, 120s, 180s
              case $i in
                1) sleep 20;;
                2) sleep 40;;
                3) sleep 60;;
                4) sleep 90;;
                5) sleep 120;;
                6) sleep 180;;
              esac
            done
          done

          if [ "$ok" -eq 0 ]; then
            echo "All downloads failed"
            exit 1
          fi

      - name: Upload artifact (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fr-${{ inputs.sirens }}
          path: out/FR/**
          if-no-files-found: ignore
          retention-days: 7
