name: fr-rne-api

on:
  workflow_dispatch:
    inputs:
      sirens:
        description: "Comma list of SIRENs"
        required: true
        default: "552100554"

permissions:
  contents: read

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 300
    env:
      INPI_USER: ${{ secrets.INPI_USER }}
      INPI_PASS: ${{ secrets.INPI_PASS }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Login (creates token file)
        run: |
          mkdir -p out/FR
          # fr_rne_fetch.py will read INPI_USER / INPI_PASS from env
          python countries/fr_rne_fetch.py --action login --token-file out/FR/inpi_token.json

      - name: List attachments (stage + breathing room)
        run: |
          IFS=',' read -ra S <<< "${{ inputs.sirens }}"
          for s in "${S[@]}"; do
            s="$(echo "$s" | xargs)"  # trim
            echo "Listing $s ..."
            python countries/fr_rne_fetch.py --action list-attachments --siren "$s" --token-file out/FR/inpi_token.json --out out/FR || true
            # Give INPI some breathing room before we hit the ZIP endpoint
            sleep 30
          done

      - name: Download attachments with retries (per SIREN)
        run: |
          IFS=',' read -ra S <<< "${{ inputs.sirens }}"
          ok=0
          for s in "${S[@]}"; do
            s="$(echo "$s" | xargs)"
            echo "Downloading $s ..."
            for i in 1 2 3 4 5; do
              if python countries/fr_rne_fetch.py --action download-attachments --siren "$s" --token-file out/FR/inpi_token.json --out out/FR; then
                ok=$((ok+1))
                break
              fi
              echo "retry $i for $s ..."
              sleep $((60*i))
            done
          done
          if [ "$ok" -eq 0 ]; then
            echo "All downloads failed"
            exit 1
          fi

      - name: Upload artifact (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fr-${{ inputs.sirens }}
          path: out/FR/**
          if-no-files-found: ignore
          retention-days: 7
